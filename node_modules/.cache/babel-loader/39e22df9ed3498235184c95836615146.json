{"ast":null,"code":"var _jsxFileName = \"/Users/michelledeng/Documents/react-spotify-player/src/Toggle.js\";\nimport React, { Component } from \"react\";\nimport \"./Toggle.css\"; // import Button from 'react-bootstrap/Button';\n// import ButtonGroup from 'react-bootstrap/Button';\n// import styled from 'styled-components';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ToggleButtons extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      button1_type: true,\n      button2_type: false,\n      button3_type: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      button1_type: !prevState.button1_type,\n      button2_type: !prevState.button2_type,\n      button3_type: !prevState.button3_type\n    })); // if(clicked_button === 1) {\n    //     this.setState(prevState => ({\n    //         button1_type: true,\n    //         button2_type: false,\n    //         button3_type: false\n    //     }));\n    //     return;\n    // }\n    // if(clicked_button === 2) {\n    //     this.setState(prevState => ({\n    //         button1_type: false,\n    //         button2_type: true,\n    //         button3_type: false\n    //     }));\n    //     return;\n    // }\n    // if(clicked_button === 3) {\n    //     this.setState(prevState => ({\n    //         button1_type: false,\n    //         button2_type: false,\n    //         button3_type: true\n    //     }));\n    //     return;\n    // }\n  } //     this.setState(prevState => ({\n  //         // if it's already clicked, then don't do anything\n  //         if(prevState) {\n  //             return;\n  //         }\n  //         button1_type: !prevState.button1_type,\n  //         button2_type: !prevState.button2_type,\n  //         button3_type: !prevState.button3_type\n  //     }))\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"last month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"last 6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClick,\n          children: \"all-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.button1_type && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"displaying last month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), this.state.button2_type && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"displaying last 6 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), this.state.button3_type && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"displaying all-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ToggleButtons; // const Button = styled.button``;\n// const ButtonToggle = styled(Button)`\n//   opacity: 0.6;\n//   ${({ active }) =>\n//     active &&\n//     `\n//     opacity: 1;\n//   `}\n// `;\n// const ButtonGroup = styled.div`\n//   display: flex;\n// `;\n// const Toggle = (button_types) => {\n//     // const button_types = ['last month', 'last 6 months', 'all-time'];\n//     const [active, setActive] = useState(button_types[0]);\n//     return (\n//         <ButtonGroup className=\"button-group\">\n//             {button_types.map(type => (\n//                 <ButtonToggle \n//                     className=\"button-toggle\"\n//                     key={type}\n//                     active={active === type}\n//                     onClick={() => setActive(type)}\n//                 >\n//                 {type}\n//              </ButtonToggle>\n//             ))}\n//         </ButtonGroup>\n//     );\n// }\n// const Toggle = () => {\n//     return (\n//         <div className=\"toggle-header\">\n//             <ButtonGroup className=\"button-group\">\n//                 <Button>\n//                     last month\n//                 </Button>\n//                 <Button>\n//                     last 6 months\n//                 </Button>\n//                 <Button>\n//                     all-time\n//                 </Button>\n//             </ButtonGroup>\n//         </div>\n//     );\n// }\n// export default Toggle;","map":{"version":3,"names":["React","Component","ToggleButtons","constructor","props","state","button1_type","button2_type","button3_type","handleClick","bind","setState","prevState","render"],"sources":["/Users/michelledeng/Documents/react-spotify-player/src/Toggle.js"],"sourcesContent":["import React, { Component} from \"react\";\nimport \"./Toggle.css\";\n// import Button from 'react-bootstrap/Button';\n// import ButtonGroup from 'react-bootstrap/Button';\n// import styled from 'styled-components';\n\nexport class ToggleButtons extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            button1_type: true,\n            button2_type: false,\n            button3_type: false,\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n\n        this.setState(prevState => ({\n            button1_type: !prevState.button1_type,\n            button2_type: !prevState.button2_type,\n            button3_type: !prevState.button3_type\n        }))\n\n        // if(clicked_button === 1) {\n        //     this.setState(prevState => ({\n        //         button1_type: true,\n        //         button2_type: false,\n        //         button3_type: false\n        //     }));\n        //     return;\n        // }\n        // if(clicked_button === 2) {\n        //     this.setState(prevState => ({\n        //         button1_type: false,\n        //         button2_type: true,\n        //         button3_type: false\n        //     }));\n        //     return;\n        // }\n        // if(clicked_button === 3) {\n        //     this.setState(prevState => ({\n        //         button1_type: false,\n        //         button2_type: false,\n        //         button3_type: true\n        //     }));\n        //     return;\n        // }\n    }\n\n    \n    //     this.setState(prevState => ({\n    //         // if it's already clicked, then don't do anything\n    //         if(prevState) {\n    //             return;\n    //         }\n    //         button1_type: !prevState.button1_type,\n    //         button2_type: !prevState.button2_type,\n    //         button3_type: !prevState.button3_type\n    //     }))\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"button-group\">\n                    <button onClick={this.handleClick}>\n                        last month\n                    </button>\n                    <button onClick={this.handleClick}>\n                        last 6 months\n                        </button>\n                    <button onClick={this.handleClick}>\n                        all-time\n                    </button>\n                </div>\n                <div>\n                    \n                    {this.state.button1_type && (\n                        <p>\n                            displaying last month\n                        </p>\n                    )}\n                    {this.state.button2_type && (\n                        <p>\n                            displaying last 6 months\n                        </p>\n                    )}\n                    {this.state.button3_type && (\n                        <p>\n                            displaying all-time\n                        </p>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ToggleButtons\n\n\n\n\n// const Button = styled.button``;\n\n// const ButtonToggle = styled(Button)`\n//   opacity: 0.6;\n//   ${({ active }) =>\n//     active &&\n//     `\n//     opacity: 1;\n//   `}\n// `;\n\n// const ButtonGroup = styled.div`\n//   display: flex;\n// `;\n\n\n// const Toggle = (button_types) => {\n//     // const button_types = ['last month', 'last 6 months', 'all-time'];\n//     const [active, setActive] = useState(button_types[0]);\n//     return (\n//         <ButtonGroup className=\"button-group\">\n//             {button_types.map(type => (\n//                 <ButtonToggle \n//                     className=\"button-toggle\"\n//                     key={type}\n//                     active={active === type}\n//                     onClick={() => setActive(type)}\n//                 >\n//                 {type}\n//              </ButtonToggle>\n//             ))}\n//         </ButtonGroup>\n//     );\n// }\n\n// const Toggle = () => {\n//     return (\n//         <div className=\"toggle-header\">\n//             <ButtonGroup className=\"button-group\">\n//                 <Button>\n//                     last month\n//                 </Button>\n//                 <Button>\n//                     last 6 months\n//                 </Button>\n//                 <Button>\n//                     all-time\n//                 </Button>\n//             </ButtonGroup>\n//         </div>\n//     );\n// }\n\n// export default Toggle;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP,C,CACA;AACA;AACA;;;AAEA,OAAO,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;EACzCE,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,YAAY,EAAE,IADL;MAETC,YAAY,EAAE,KAFL;MAGTC,YAAY,EAAE;IAHL,CAAb;IAKA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;EACH;;EAEDD,WAAW,GAAG;IAEV,KAAKE,QAAL,CAAcC,SAAS,KAAK;MACxBN,YAAY,EAAE,CAACM,SAAS,CAACN,YADD;MAExBC,YAAY,EAAE,CAACK,SAAS,CAACL,YAFD;MAGxBC,YAAY,EAAE,CAACI,SAAS,CAACJ;IAHD,CAAL,CAAvB,EAFU,CAQV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CA3CwC,CA8CzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAGAK,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,cAAf;QAAA,wBACI;UAAQ,OAAO,EAAE,KAAKJ,WAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAQ,OAAO,EAAE,KAAKA,WAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAOI;UAAQ,OAAO,EAAE,KAAKA,WAAtB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAYI;QAAA,WAEK,KAAKJ,KAAL,CAAWC,YAAX,iBACG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHR,EAOK,KAAKD,KAAL,CAAWE,YAAX,iBACG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARR,EAYK,KAAKF,KAAL,CAAWG,YAAX,iBACG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAbR;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAiCH;;AA3FwC;AA8F7C,eAAeN,aAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}