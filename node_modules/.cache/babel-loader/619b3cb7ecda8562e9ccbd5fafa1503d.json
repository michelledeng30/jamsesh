{"ast":null,"code":"var _jsxFileName = \"/Users/michelledeng/Documents/react-spotify-player/src/Genres.js\";\nimport React from \"react\";\nimport \"./Genres.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genres = props => {\n  let items = props.top_artist_items;\n  let genre_array = [];\n\n  for (let i = 0; i < 5; i++) {\n    genre_array = genre_array.concat(items[i].genres);\n  }\n\n  let counts = {};\n\n  for (let current_genre of genre_array) {\n    counts[current_genre] = counts[current_genre] ? counts[current_genre] + 1 : 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genres-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"genres-list\",\n        children: genre_array.map(current_genre => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: current_genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Genres;\nexport default Genres;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","Genres","props","items","top_artist_items","genre_array","i","concat","genres","counts","current_genre","map"],"sources":["/Users/michelledeng/Documents/react-spotify-player/src/Genres.js"],"sourcesContent":["import React from \"react\";\nimport \"./Genres.css\";\n\nconst Genres = props => {\n    let items = props.top_artist_items;\n    let genre_array = [];\n\n    for (let i = 0; i < 5; i++) {\n        genre_array = genre_array.concat(items[i].genres);\n    }\n\n    let counts = {};\n    for (let current_genre of genre_array){\n        counts[current_genre] = counts[current_genre] ? counts[current_genre] + 1 : 1;\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"genres-wrapper\">\n                <h2></h2>\n                <ol className=\"genres-list\">\n                    {genre_array.map((current_genre) => (\n                        <li>{current_genre}</li>\n                    ))}\n                </ol>\n            </div>\n        </div>\n    );\n}\n\nexport default Genres;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACpB,IAAIC,KAAK,GAAGD,KAAK,CAACE,gBAAlB;EACA,IAAIC,WAAW,GAAG,EAAlB;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;IACxBD,WAAW,GAAGA,WAAW,CAACE,MAAZ,CAAmBJ,KAAK,CAACG,CAAD,CAAL,CAASE,MAA5B,CAAd;EACH;;EAED,IAAIC,MAAM,GAAG,EAAb;;EACA,KAAK,IAAIC,aAAT,IAA0BL,WAA1B,EAAsC;IAClCI,MAAM,CAACC,aAAD,CAAN,GAAwBD,MAAM,CAACC,aAAD,CAAN,GAAwBD,MAAM,CAACC,aAAD,CAAN,GAAwB,CAAhD,GAAoD,CAA5E;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACI;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAI,SAAS,EAAC,aAAd;QAAA,UACKL,WAAW,CAACM,GAAZ,CAAiBD,aAAD,iBACb;UAAA,UAAKA;QAAL;UAAA;UAAA;UAAA;QAAA,QADH;MADL;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAzBD;;KAAMT,M;AA2BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}