{"ast":null,"code":"var _jsxFileName = \"/Users/michelledeng/Documents/spotify_react/react-spotify-player/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./const\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n      top_track: \"\",\n      top_artist: \"\",\n      no_top_data: false\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    } // set interval for polling every 2 seconds\n\n\n    this.interval = setInterval(() => this.tick(), 2000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if (this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false\n          /* We need to \"reset\" the boolean, in case the\n             user does not give F5 and has opened his Spotify. */\n\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), !this.state.token && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn--loginApp-link\",\n          href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n          children: \"Login to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), this.state.token && !this.state.no_data && /*#__PURE__*/_jsxDEV(Player, {\n          item: this.state.item,\n          is_playing: this.state.is_playing,\n          progress_ms: this.state.progress_ms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), this.state.no_data && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You're currently not playing anything on Spotify.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","hash","Player","logo","App","constructor","state","token","item","album","images","url","name","artists","duration_ms","is_playing","progress_ms","no_data","top_track","top_artist","no_top_data","getCurrentlyPlaying","bind","tick","componentDidMount","_token","access_token","setState","interval","setInterval","componentWillUnmount","clearInterval","ajax","type","beforeSend","xhr","setRequestHeader","success","data","render","join"],"sources":["/Users/michelledeng/Documents/spotify_react/react-spotify-player/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./const\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n      top_track: \"\",\n      top_artist: \"\",\n      no_top_data: false,\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n    }\n\n    // set interval for polling every 2 seconds\n    this.interval = setInterval(() => this.tick(), 2000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if(this.state.token) {\n      this.getCurrentlyPlaying(this.state.token);\n    }\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {!this.state.token && (\n            <a\n              className=\"btn btn--loginApp-link\"\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n            >\n              Login to Spotify\n            </a>\n          )}\n          {this.state.token && !this.state.no_data && (\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.state.progress_ms}\n            />\n          )}\n          {this.state.no_data && (\n            <p>\n              You're currently not playing anything on Spotify. \n            </p>\n          )}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}