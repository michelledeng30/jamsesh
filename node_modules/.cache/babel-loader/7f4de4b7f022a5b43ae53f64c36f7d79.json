{"ast":null,"code":"var _jsxFileName = \"/Users/michelledeng/Documents/react-spotify-player/src/App.js\";\nimport React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./const\";\nimport { track_uri, artist_uri, short_uri, medium_uri, long_uri } from \"./const\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport Top from \"./Top\";\nimport Toggle from \"./Toggle\";\nimport Button from 'react-bootstrap/Button';\nimport \"./App.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getCurrentPlayer = async token => {\n      try {\n        const [response1, response2] = await Promise.all([axios.get(\"https://api.spotify.com/v1/me/player\", {\n          headers: {\n            Authorization: 'Bearer ' + token\n          }\n        }), axios.get(\"https://api.spotify.com/v1/me/top/tracks?time_range=short_term\", {\n          headers: {\n            Authorization: 'Bearer ' + token\n          }\n        })]);\n\n        if (!response1.data) {\n          this.setState({\n            no_data: true\n          });\n          return;\n        }\n\n        if (!response2.data) {\n          this.setState({\n            no_top_tracks_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          item: response1.data.item,\n          is_playing: response1.data.is_playing,\n          progress_ms: response1.data.progress_ms,\n          no_data: false,\n          top_track_items: response2.data.items,\n          no_top_tracks_data: false\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{\n            url: \"\"\n          }]\n        },\n        name: \"\",\n        artists: [{\n          name: \"\"\n        }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n      top_track_items: [{\n        item: {\n          album: {\n            images: [{\n              url: \"\"\n            }]\n          },\n          name: \"\",\n          artists: [{\n            name: \"\"\n          }]\n        }\n      }],\n      no_top_tracks_data: false,\n      top_artist_items: [{\n        name: \"\"\n      }],\n      no_top_artists_data: false\n    };\n    this.getCurrentPlayer = this.getCurrentPlayer.bind(this); // this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    // this.getTopTracks = this.getTopTracks.bind(this);\n    // this.getTopArtists = this.getTopArtists.bind(this);\n\n    this.tick = this.tick.bind(this);\n  } // runs after first render() lifecycle\n\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentPlayer(this.state.token); // this.getCurrentlyPlaying(_token);\n      // this.getTopTracks(_token);\n      // this.getTopArtists(_token);\n    } // set interval for polling every 2 seconds\n\n\n    this.interval = setInterval(() => this.tick(), 2000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if (this.state.token) {\n      this.getCurrentPlayer(this.state.token); // this.getCurrentlyPlaying(this.state.token);\n      // this.getTopTracks(this.state.token);\n      // this.getTopArtists(this.state.token);\n    }\n  }\n\n  // getCurrentPlayer = async(token) => {\n  //   try{\n  //     const response = await axios.get(\"https://api.spotify.com/v1/me/player\", {\n  //       headers: {\n  //         Authorization: 'Bearer ' + token,\n  //       }\n  //     });\n  //     if (!response.data) {\n  //       this.setState({\n  //         no_data: true,\n  //       });\n  //       return;\n  //     }\n  //     this.setState({\n  //       item: response.data.item,\n  //       is_playing: response.data.is_playing,\n  //       progress_ms: response.data.progress_ms,\n  //       no_data: false,\n  //     })\n  //   } catch(error){\n  //     console.log(error);\n  //   }\n  // };\n  getCurrentlyPlaying(token) {\n    // make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false\n        });\n      }\n    });\n  }\n\n  getTopTracks(token) {\n    // make a call using token\n    $.ajax({\n      url: track_uri + short_uri,\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_top_tracks_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          top_track_items: data.items,\n          no_top_tracks_data: false\n        });\n      }\n    });\n  }\n\n  getTopArtists(token) {\n    // make a call using token\n    $.ajax({\n      url: artist_uri + short_uri,\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if (!data) {\n          this.setState({\n            no_top_artists_data: true\n          });\n          return;\n        }\n\n        this.setState({\n          top_artist_items: data.items,\n          no_top_artists_data: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"stats for spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [!this.state.token && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"login\",\n          href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n          children: \"Login to Spotify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), this.state.token && !this.state.no_data && /*#__PURE__*/_jsxDEV(Player, {\n          item: this.state.item,\n          is_playing: this.state.is_playing,\n          progress_ms: this.state.progress_ms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), this.state.no_data && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You're currently not playing anything on Spotify.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), this.state.token && /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), this.state.token && !this.state.no_top_tracks_data && /*#__PURE__*/_jsxDEV(Top, {\n          top_track_items: this.state.top_track_items // top_artist_items={this.state.top_artist_items}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","$","authEndpoint","clientId","redirectUri","scopes","track_uri","artist_uri","short_uri","medium_uri","long_uri","hash","Player","Top","Toggle","Button","axios","App","constructor","getCurrentPlayer","token","response1","response2","Promise","all","get","headers","Authorization","data","setState","no_data","no_top_tracks_data","item","is_playing","progress_ms","top_track_items","items","error","console","log","state","album","images","url","name","artists","duration_ms","top_artist_items","no_top_artists_data","bind","tick","componentDidMount","_token","access_token","interval","setInterval","componentWillUnmount","clearInterval","getCurrentlyPlaying","ajax","type","beforeSend","xhr","setRequestHeader","success","getTopTracks","getTopArtists","render","join"],"sources":["/Users/michelledeng/Documents/react-spotify-player/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./const\";\nimport { track_uri, artist_uri, short_uri, medium_uri, long_uri } from \"./const\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport Top from \"./Top\";\nimport Toggle from \"./Toggle\";\nimport Button from 'react-bootstrap/Button';\nimport \"./App.css\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0,\n      no_data: false,\n\n      top_track_items: [{\n        item: {\n          album: {\n            images: [{ url: \"\" }]\n          },\n          name: \"\",\n          artists: [{ name: \"\" }],\n        }\n      }],\n  \n      no_top_tracks_data: false,\n      top_artist_items: [ {name: \"\"}],\n      no_top_artists_data: false,\n\n    };\n    this.getCurrentPlayer = this.getCurrentPlayer.bind(this);\n    // this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    // this.getTopTracks = this.getTopTracks.bind(this);\n    // this.getTopArtists = this.getTopArtists.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  // runs after first render() lifecycle\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n\n      this.getCurrentPlayer(this.state.token);\n      // this.getCurrentlyPlaying(_token);\n      // this.getTopTracks(_token);\n      // this.getTopArtists(_token);\n    }\n\n    // set interval for polling every 2 seconds\n    this.interval = setInterval(() => this.tick(), 2000);\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n\n  tick() {\n    if(this.state.token) {\n      this.getCurrentPlayer(this.state.token);\n      // this.getCurrentlyPlaying(this.state.token);\n      // this.getTopTracks(this.state.token);\n      // this.getTopArtists(this.state.token);\n    }\n  }\n\n\n  getCurrentPlayer = async(token) => {\n    try{\n      const [response1, response2] = await Promise.all([\n        axios.get(\"https://api.spotify.com/v1/me/player\", {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          }\n        }),\n        axios.get(\"https://api.spotify.com/v1/me/top/tracks?time_range=short_term\",  {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          }\n        })\n      ]);\n      if (!response1.data) {\n        this.setState({\n          no_data: true,\n        });\n        return;\n      }\n      if (!response2.data) {\n        this.setState({\n          no_top_tracks_data: true,\n        });\n        return;\n      }\n      this.setState({\n        item: response1.data.item,\n        is_playing: response1.data.is_playing,\n        progress_ms: response1.data.progress_ms,\n        no_data: false,\n\n        top_track_items: response2.data.items,\n        no_top_tracks_data: false,\n      });\n    } catch(error){\n      console.log(error);\n    }\n  };\n\n\n\n  // getCurrentPlayer = async(token) => {\n  //   try{\n  //     const response = await axios.get(\"https://api.spotify.com/v1/me/player\", {\n  //       headers: {\n  //         Authorization: 'Bearer ' + token,\n  //       }\n  //     });\n  //     if (!response.data) {\n  //       this.setState({\n  //         no_data: true,\n  //       });\n  //       return;\n  //     }\n  //     this.setState({\n  //       item: response.data.item,\n  //       is_playing: response.data.is_playing,\n  //       progress_ms: response.data.progress_ms,\n  //       no_data: false,\n  //     })\n  //   } catch(error){\n  //     console.log(error);\n  //   }\n  // };\n\n\n  getCurrentlyPlaying(token) {\n    // make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms,\n          no_data: false\n        });\n      }\n    });\n  }\n\n  getTopTracks(token) {\n    // make a call using token\n\n    $.ajax({\n      url: track_uri + short_uri,\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_top_tracks_data: true,\n          });\n          return;\n        }\n        \n        this.setState({\n          top_track_items: data.items,\n          no_top_tracks_data: false,\n        });\n      }\n    });\n  }\n\n  getTopArtists(token) {\n    // make a call using token\n    $.ajax({\n      url: artist_uri + short_uri,\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_top_artists_data: true,\n          });\n          return;\n        }\n        \n        this.setState({\n          top_artist_items: data.items,\n          no_top_artists_data: false,\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"title\">\n        stats for spotify\n        </div>\n        <header className=\"App-header\">\n\n          {/* login page */}\n          {!this.state.token && (\n            <Button className=\"login\" href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n              \"%20\"\n            )}&response_type=token&show_dialog=true`}>\n              Login to Spotify\n            </Button>\n          )}\n\n          {/* player */}\n          {this.state.token && !this.state.no_data && (\n            <Player\n              item={this.state.item}\n              is_playing={this.state.is_playing}\n              progress_ms={this.state.progress_ms}\n            />\n          )}\n          {this.state.no_data && (\n            <p>\n              You're currently not playing anything on Spotify.\n            </p>\n          )}\n\n          {/* toggle button */}\n\n          {this.state.token && (\n            <Toggle\n              \n            />\n          )}\n\n          {/* {this.state.token && this.state.no_top_tracks_data && (\n            <p>\n              No top tracks data :/\n            </p>\n          )} */}\n\n          {/* {this.state.token && this.state.no_top_artists_data && (\n            <p>\n              No top artists data :/\n            </p>\n          )} */}\n\n          {/* stats */}\n          {/* {this.state.token && !this.state.no_top_tracks_data && !this.state.no_top_artists_data &&(  \n            <Top\n              top_track_items={this.state.top_track_items}\n              top_artist_items={this.state.top_artist_items}\n            />\n          )} */}\n\n          {this.state.token && !this.state.no_top_tracks_data &&(  \n            <Top\n              top_track_items={this.state.top_track_items}\n              // top_artist_items={this.state.top_artist_items}\n            />\n          )}\n\n          \n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}